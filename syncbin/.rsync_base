#!/bin/bash

# This file should be source'd ***BEFORE*** anything in sync scripts!
# 
# The following functions and variables can be overridden in order to support
# different syncing requirements.

_RSYNC_ARGS="-aHvh --delete --delete-delay --stats --safe-links --timeout=120 --contimeout=60 --delay-updates"

_sync () {
    mkdir -p $MIRRORROOT/$_REPO
    cd $MIRRORROOT/$_REPO
    if [[ $? != 0 ]]; then
        return 1
    fi
    rsync $_UPSTREAM . $_RSYNC_ARGS
    RETVAL=$?
    cd $OWD
    return $RETVAL
}

_post_sync () {
    return 0; # This is a stub
}

_get_upstream () {
    echo $_UPSTREAM
}

_is_intermediate_upstream () {
    ! ls $MIRRORROOT/$_REPO/Archive-Update-in-Pro* &>/dev/null
}

_get_next_sync_time () {
    _CURTIME=$(date +%s)
    _DELTA=$_SYNCEVERY
    _DELTA=$( echo $((_DELTA + RANDOM % 5400 - 3600)) 1800 | xargs python -c 'import sys;print max(int(sys.argv[1]), int(sys.argv[2]))' )
    if _is_intermediate_upstream &>/dev/null; then
        _DELTA=$_FAILRETRY
    fi
    if [ "$LASTSTATUS" == "failed" ]; then
        OLD=$(kvdb_local_get failure_times)
        if [ "$?" -gt "0" ]; then
            OLD=0
        fi
        if [ "$OLD" -lt "$_FAILRETRIES" ]; then
            kvdb_local_set failure_times $((OLD+1))
            _DELTA=$_FAILRETRY
        else
            kvdb_local_set failure_times 0
        fi
    else
            kvdb_local_set failure_times 0
    fi
    echo $(( $_CURTIME + $_DELTA ))
}

_get_size () {
    _STDOUT=$LOGROOT/$_REPO/log.stdout
    tail -n1 $_STDOUT | cut -d' ' -f4
}
