#!/bin/bash

# This file should be source'd ***BEFORE*** anything in sync scripts!
# 
# The following functions and variables can be overridden in order to support
# different syncing requirements.

_RSYNC_ARGS="-aHvh --delete --delete-delay --stats --safe-links --timeout=120 --contimeout=120 --delay-updates"

_sync () {
    mkdir -p $MIRRORROOT/$_REPO
    cd $MIRRORROOT/$_REPO
    if [[ $? != 0 ]]; then
        return 1
    fi
    if [[ -n "$_TIMESTAMP_PATH" ]]; then
        _TIMESTAMP_TEMP=$( mktemp "/tmp/${_REPO}.XXXXX" )
        rsync -q --no-motd "${_UPSTREAM%\/}/${_TIMESTAMP_PATH#\/}" "$_TIMESTAMP_TEMP"
        if cmp -s "$MIRRORROOT/$_REPO/${_TIMESTAMP_PATH#\/}" "$_TIMESTAMP_TEMP"; then
            echo "Remote timestamp is the same as local timestamp."
            echo "No actual sync will be performed."
            rm $_TIMESTAMP_TEMP
            return 0
        fi
        rm $_TIMESTAMP_TEMP
    fi
    rsync $_UPSTREAM . $_RSYNC_ARGS
    RETVAL=$?
    cd $OWD
    return $RETVAL
}

_post_sync () {
    return 0; # This is a stub
}

_get_upstream () {
    echo $_UPSTREAM
}

_upstream_inconsistent () {
    ls $MIRRORROOT/$_REPO/Archive-Update-in-Pro* &>/dev/null
    return $?
}

_get_next_sync_time () {
    _CURTIME=$(date +%s)
    _DELTA=$_SYNCEVERY
    if [[ "$_DELTA" -ge "1800" ]]; then
        _DELTA=$( echo $((_DELTA + RANDOM % 5400 - 3600)) 1800 | xargs python -c 'import sys;print max(int(sys.argv[1]), int(sys.argv[2]))' )
    fi
    if _upstream_inconsistent &>/dev/null; then
        _DELTA=$_FAILRETRY
    fi
    if [[ "$LASTSTATUS" == "failed" ]]; then
        OLD=$(kvdb_local_get failure_times)
        if [[ "$?" -gt "0" ]]; then
            OLD=0
        fi
        if [[ "$OLD" -lt "$_FAILRETRIES" ]]; then
            kvdb_local_set failure_times $((OLD+1))
            _DELTA=$_FAILRETRY
        else
            kvdb_local_set failure_times 0
        fi
    else
            kvdb_local_set failure_times 0
    fi
    echo $(( $_CURTIME + $_DELTA ))
}

_get_size () {
    _STDOUT=$LOGROOT/$_REPO/log.stdout
    if grep "No actual sync will be performed" $_STDOUT >/dev/null; then
        echo "$SIZE"
    else
        tail -n1 $_STDOUT | cut -d' ' -f4
    fi
}
